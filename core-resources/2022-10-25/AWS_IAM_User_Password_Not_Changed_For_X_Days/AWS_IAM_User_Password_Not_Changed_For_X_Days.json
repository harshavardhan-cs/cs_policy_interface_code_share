{
  "name": "AWS_Audit_IAM_User_Password_Rotation_Compliance_For_X_Days",
  "display_name": "AWS Audit IAM User Password Rotation Compliance For X Days",
  "description": "Policy to verify whether the account has IAM users and the password is modified periodically as per the defined time intervals.",
  "category": "service",
  "status": "active",
  "content": "not_rotated_x_days(user, user_id, arn, password_last_changed_date, policy_execution_date, password_next_rotation) :- aws_iam_credential_report:credential_report(user=user, arn=arn, password_last_changed=password_last_changed, password_next_rotation=password_next_rotation), ne(user, '<root_account>'), extract_date(password_last_changed, password_last_changed_date), now(today), extract_date(today, policy_execution_date), datetime_minus(policy_execution_date, '00:#Number_of_Days#:00:00:00', older_date), datetime_lteq(password_last_changed, older_date), aws_iam_user:users(username=user, user_id=user_id);",
  "parameters": {
    "Number_of_Days": {
      "type": "number",
      "description": "Specify the rotation frequency in no.of days.",
      "label": "Number_Of_Days",
      "default": 45,
      "constraints": [
        {
          "range": {
            "min": 1
          }
        }
      ]
    }
  },
  "classification": "Access",
  "sub_classification": "Standards",
  "service_resource": [
    "IAM_Users"
  ],
  "resource_type": "IAM",
  "severity": "high",
  "type": [
    "Cloud"
  ],
  "services": [
    "AWS"
  ],
  "scope": "global",
  "metadata": {
    "onboarding_policy": true
  },
  "resources": [],
  "is_temp": false,
  "dependent_rules": {
    "pwd_last_change_na": "not_rotated_x_days(user, user_id, arn, 'N/A', policy_execution_date, password_next_rotation) :- aws_iam_credential_report:credential_report(user=user, arn=arn, password_last_changed=password_last_changed, password_next_rotation=password_next_rotation), ne(user, '<root_account>'), now(today), extract_date(today, policy_execution_date), equal(password_last_changed, 'N/A'), aws_iam_user:users(username=user, user_id=user_id);"
  },
  "is_system_policy": false,
  "uri": "policy/congress/global/aws/compliance/iam_user/cel4s",
  "recommendations": [
    "AWS_Reset_IAM_Password"
  ]
}
